/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    products: Product;
    suppliers: Supplier;
    customers: Customer;
    orders: Order;
    inventory: Inventory;
    purchases: Purchase;
    invoices: Invoice;
    payments: Payment;
    warehouses: Warehouse;
    shippingMethods: ShippingMethod;
    taxRates: TaxRate;
    reports: Report;
    documents: Document;
    integrations: Integration;
    auditLogs: AuditLog;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    suppliers: SuppliersSelect<false> | SuppliersSelect<true>;
    customers: CustomersSelect<false> | CustomersSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    inventory: InventorySelect<false> | InventorySelect<true>;
    purchases: PurchasesSelect<false> | PurchasesSelect<true>;
    invoices: InvoicesSelect<false> | InvoicesSelect<true>;
    payments: PaymentsSelect<false> | PaymentsSelect<true>;
    warehouses: WarehousesSelect<false> | WarehousesSelect<true>;
    shippingMethods: ShippingMethodsSelect<false> | ShippingMethodsSelect<true>;
    taxRates: TaxRatesSelect<false> | TaxRatesSelect<true>;
    reports: ReportsSelect<false> | ReportsSelect<true>;
    documents: DocumentsSelect<false> | DocumentsSelect<true>;
    integrations: IntegrationsSelect<false> | IntegrationsSelect<true>;
    auditLogs: AuditLogsSelect<false> | AuditLogsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (string | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (string | Post)[] | null;
  categories?: (string | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: string | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  name: string;
  description?: string | null;
  /**
   * Supplier from whom this product is sourced
   */
  supplier?: (string | null) | Supplier;
  categories?:
    | {
        category: string;
        id?: string | null;
      }[]
    | null;
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Stock Keeping Unit - unique identifier
   */
  sku: string;
  barcode?: string | null;
  price: number;
  /**
   * Price at which the product is purchased from supplier
   */
  costPrice?: number | null;
  inStock?: boolean | null;
  minStockLevel?: number | null;
  dimensions?: {
    length?: number | null;
    width?: number | null;
    height?: number | null;
    weight?: number | null;
  };
  /**
   * Applicable tax rate for this product
   */
  taxRate?: (string | null) | TaxRate;
  images?:
    | {
        image: string | Media;
        altText?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "suppliers".
 */
export interface Supplier {
  id: string;
  name: string;
  contactPerson?: string | null;
  email?: string | null;
  phone?: string | null;
  website?: string | null;
  taxId?: string | null;
  vatId?: string | null;
  /**
   * e.g. Net 30 days
   */
  paymentTerms?: string | null;
  notes?: string | null;
  /**
   * Products sourced from this supplier
   */
  products?: (string | Product)[] | null;
  pricingTerms?: string | null;
  contractInfo?: {
    contractNumber?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    autoRenew?: boolean | null;
    contractDocument?: (string | null) | Document;
  };
  address?: {
    street?: string | null;
    zipCode?: string | null;
    city?: string | null;
    country?: string | null;
  };
  bankInfo?: {
    accountHolder?: string | null;
    iban?: string | null;
    bic?: string | null;
    bankName?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents".
 */
export interface Document {
  id: string;
  title: string;
  documentType: 'invoice' | 'deliveryNote' | 'order' | 'receipt' | 'contract' | 'taxDocument' | 'report' | 'other';
  description?: string | null;
  relatedEntity?:
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null)
    | ({
        relationTo: 'customers';
        value: string | Customer;
      } | null)
    | ({
        relationTo: 'suppliers';
        value: string | Supplier;
      } | null)
    | ({
        relationTo: 'purchases';
        value: string | Purchase;
      } | null)
    | ({
        relationTo: 'invoices';
        value: string | Invoice;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null);
  createdBy?: (string | null) | User;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  isPublic?: boolean | null;
  expiryDate?: string | null;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  orderNumber: string;
  orderDate: string;
  status: 'new' | 'processing' | 'shipped' | 'completed' | 'cancelled' | 'refunded';
  orderType: 'online' | 'instore' | 'phone';
  customer: string | Customer;
  orderItems?:
    | {
        product: string | Product;
        quantity: number;
        unitPrice: number;
        discount?: number | null;
        id?: string | null;
      }[]
    | null;
  shippingAddress?: {
    street?: string | null;
    zipCode?: string | null;
    city?: string | null;
    country?: string | null;
  };
  billingAddress?: {
    sameAsShipping?: boolean | null;
    street?: string | null;
    zipCode?: string | null;
    city?: string | null;
    country?: string | null;
  };
  shippingMethod?: (string | null) | ShippingMethod;
  paymentMethod?: string | null;
  subtotal?: number | null;
  taxAmount?: number | null;
  shippingCost?: number | null;
  discount?: number | null;
  total: number;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: string;
  name: string;
  customerNumber: string;
  contactPerson?: string | null;
  email?: string | null;
  phone?: string | null;
  customerType?: ('retail' | 'wholesale' | 'business') | null;
  taxId?: string | null;
  vatId?: string | null;
  paymentTerms?: string | null;
  notes?: string | null;
  orders?: (string | Order)[] | null;
  invoices?: (string | Invoice)[] | null;
  billingAddress?: {
    street?: string | null;
    zipCode?: string | null;
    city?: string | null;
    country?: string | null;
  };
  shippingAddress?: {
    sameAsBilling?: boolean | null;
    street?: string | null;
    zipCode?: string | null;
    city?: string | null;
    country?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invoices".
 */
export interface Invoice {
  id: string;
  invoiceNumber: string;
  invoiceDate: string;
  dueDate: string;
  status: 'unpaid' | 'partiallyPaid' | 'paid' | 'overdue' | 'cancelled';
  order?: (string | null) | Order;
  customer?: (string | null) | Customer;
  customerInfo: {
    customerNumber?: string | null;
    name: string;
    email?: string | null;
    phone?: string | null;
    taxId?: string | null;
    vatId?: string | null;
  };
  billingAddress?: {
    street?: string | null;
    zipCode?: string | null;
    city?: string | null;
    country?: string | null;
  };
  paymentTerms?: string | null;
  paymentMethod?: string | null;
  subtotal?: number | null;
  taxAmount?: number | null;
  shippingCost?: number | null;
  discount?: number | null;
  total: number;
  notes?: string | null;
  issuedBy?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shippingMethods".
 */
export interface ShippingMethod {
  id: string;
  name: string;
  carrier?: string | null;
  description?: string | null;
  price: number;
  estimatedDeliveryDays?: {
    min?: number | null;
    max?: number | null;
  };
  isActive?: boolean | null;
  isDefault?: boolean | null;
  trackingAvailable?: boolean | null;
  /**
   * URL format with {tracking_number} as placeholder
   */
  trackingUrlFormat?: string | null;
  restrictions?: {
    minWeight?: number | null;
    maxWeight?: number | null;
    minOrderAmount?: number | null;
    countries?:
      | {
          country: string;
          id?: string | null;
        }[]
      | null;
  };
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "purchases".
 */
export interface Purchase {
  id: string;
  purchaseNumber: string;
  orderDate: string;
  expectedDeliveryDate?: string | null;
  actualDeliveryDate?: string | null;
  status: 'ordered' | 'partiallyDelivered' | 'delivered' | 'completed' | 'cancelled';
  supplier: string | Supplier;
  supplierInfo: {
    name: string;
    contactPerson?: string | null;
    email?: string | null;
    phone?: string | null;
  };
  purchaseItems?:
    | {
        product: string | Product;
        quantity: number;
        unitPrice: number;
        discount?: number | null;
        id?: string | null;
      }[]
    | null;
  paymentInfo?: {
    paymentTerms?: string | null;
    paymentMethod?: string | null;
    paymentStatus?: ('pending' | 'partiallyPaid' | 'paid' | 'overdue') | null;
    dueDate?: string | null;
  };
  subtotal?: number | null;
  taxAmount?: number | null;
  shippingCost?: number | null;
  discount?: number | null;
  total: number;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "taxRates".
 */
export interface TaxRate {
  id: string;
  name: string;
  rate: number;
  description?: string | null;
  isActive?: boolean | null;
  region?: string | null;
  isDefault?: boolean | null;
  category?: ('standard' | 'reduced' | 'zero' | 'exempt') | null;
  effectiveFrom?: string | null;
  effectiveTo?: string | null;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inventory".
 */
export interface Inventory {
  id: string;
  inventoryId: string;
  product: string | Product;
  quantity: number;
  /**
   * Quantity that is not reserved
   */
  availableQuantity?: number | null;
  /**
   * Quantity that is reserved for orders
   */
  reservedQuantity?: number | null;
  location?: string | null;
  warehouse?: (string | null) | Warehouse;
  section?: string | null;
  shelf?: string | null;
  bin?: string | null;
  minStockLevel?: number | null;
  reorderPoint?: number | null;
  reorderQuantity?: number | null;
  lastStockTake?: string | null;
  status?: ('sufficient' | 'low' | 'critical' | 'outOfStock' | 'onOrder') | null;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "warehouses".
 */
export interface Warehouse {
  id: string;
  name: string;
  code: string;
  description?: string | null;
  isActive?: boolean | null;
  address?: {
    street?: string | null;
    zipCode?: string | null;
    city?: string | null;
    country?: string | null;
  };
  contact?: {
    name?: string | null;
    phone?: string | null;
    email?: string | null;
  };
  size?: number | null;
  /**
   * Maximum capacity (pallet spaces or similar)
   */
  capacity?: number | null;
  currentUsage?: number | null;
  sections?:
    | {
        name: string;
        code: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payments".
 */
export interface Payment {
  id: string;
  paymentNumber: string;
  paymentDate: string;
  invoice: string | Invoice;
  invoiceInfo?: {
    invoiceNumber?: string | null;
    invoiceDate?: string | null;
  };
  amount: number;
  paymentMethod: 'cash' | 'creditCard' | 'bankTransfer' | 'paypal' | 'directDebit' | 'check';
  status: 'completed' | 'processing' | 'failed' | 'refunded';
  customer?: (string | null) | Customer;
  customerInfo?: {
    customerNumber?: string | null;
    name?: string | null;
  };
  paymentReference?: string | null;
  transactionId?: string | null;
  notes?: string | null;
  processedBy?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reports".
 */
export interface Report {
  id: string;
  title: string;
  reportType: 'sales' | 'inventory' | 'financial' | 'customer' | 'supplier' | 'custom';
  description?: string | null;
  /**
   * Parameters for the report in JSON format
   */
  parameters?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  dateRange?: {
    startDate?: string | null;
    endDate?: string | null;
  };
  /**
   * Generated report data in JSON format
   */
  results?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  createdBy?: (string | null) | User;
  notes?: string | null;
  isScheduled?: boolean | null;
  schedule?: {
    frequency?: ('daily' | 'weekly' | 'monthly' | 'quarterly') | null;
    nextRunDate?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "integrations".
 */
export interface Integration {
  id: string;
  name: string;
  integrationType: 'elster' | 'accounting' | 'payment' | 'shipping' | 'email' | 'crm' | 'marketplace' | 'custom';
  description?: string | null;
  connectionDetails?: {
    apiUrl?: string | null;
    authType?: ('apiKey' | 'oauth' | 'basic' | 'token') | null;
    /**
     * All credentials are stored encrypted
     */
    credentials?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  status: 'active' | 'inactive' | 'failed' | 'maintenance';
  lastSyncAt?: string | null;
  syncFrequency?: ('manual' | 'hourly' | 'daily' | 'weekly') | null;
  nextSyncAt?: string | null;
  /**
   * Configuration for mapping fields between systems
   */
  mappings?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  errorLog?:
    | {
        timestamp?: string | null;
        errorMessage?: string | null;
        details?: string | null;
        id?: string | null;
      }[]
    | null;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Logs all changes within the system for audit purposes
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auditLogs".
 */
export interface AuditLog {
  id: string;
  user: string | User;
  action:
    | 'create'
    | 'update'
    | 'delete'
    | 'login'
    | 'logout'
    | 'export'
    | 'import'
    | 'changePermission'
    | 'processPayment'
    | 'other';
  /**
   * The type of entity that was changed (e.g. product, order)
   */
  entityType: string;
  /**
   * The ID of the affected entity
   */
  entityId?: string | null;
  /**
   * Additional information about the action
   */
  details?: string | null;
  /**
   * Stores the exact changes (before/after)
   */
  changes?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  ipAddress?: string | null;
  userAgent?: string | null;
  status?: ('success' | 'failed' | 'warning') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: string | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'suppliers';
        value: string | Supplier;
      } | null)
    | ({
        relationTo: 'customers';
        value: string | Customer;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null)
    | ({
        relationTo: 'inventory';
        value: string | Inventory;
      } | null)
    | ({
        relationTo: 'purchases';
        value: string | Purchase;
      } | null)
    | ({
        relationTo: 'invoices';
        value: string | Invoice;
      } | null)
    | ({
        relationTo: 'payments';
        value: string | Payment;
      } | null)
    | ({
        relationTo: 'warehouses';
        value: string | Warehouse;
      } | null)
    | ({
        relationTo: 'shippingMethods';
        value: string | ShippingMethod;
      } | null)
    | ({
        relationTo: 'taxRates';
        value: string | TaxRate;
      } | null)
    | ({
        relationTo: 'reports';
        value: string | Report;
      } | null)
    | ({
        relationTo: 'documents';
        value: string | Document;
      } | null)
    | ({
        relationTo: 'integrations';
        value: string | Integration;
      } | null)
    | ({
        relationTo: 'auditLogs';
        value: string | AuditLog;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  supplier?: T;
  categories?:
    | T
    | {
        category?: T;
        id?: T;
      };
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  sku?: T;
  barcode?: T;
  price?: T;
  costPrice?: T;
  inStock?: T;
  minStockLevel?: T;
  dimensions?:
    | T
    | {
        length?: T;
        width?: T;
        height?: T;
        weight?: T;
      };
  taxRate?: T;
  images?:
    | T
    | {
        image?: T;
        altText?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "suppliers_select".
 */
export interface SuppliersSelect<T extends boolean = true> {
  name?: T;
  contactPerson?: T;
  email?: T;
  phone?: T;
  website?: T;
  taxId?: T;
  vatId?: T;
  paymentTerms?: T;
  notes?: T;
  products?: T;
  pricingTerms?: T;
  contractInfo?:
    | T
    | {
        contractNumber?: T;
        startDate?: T;
        endDate?: T;
        autoRenew?: T;
        contractDocument?: T;
      };
  address?:
    | T
    | {
        street?: T;
        zipCode?: T;
        city?: T;
        country?: T;
      };
  bankInfo?:
    | T
    | {
        accountHolder?: T;
        iban?: T;
        bic?: T;
        bankName?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers_select".
 */
export interface CustomersSelect<T extends boolean = true> {
  name?: T;
  customerNumber?: T;
  contactPerson?: T;
  email?: T;
  phone?: T;
  customerType?: T;
  taxId?: T;
  vatId?: T;
  paymentTerms?: T;
  notes?: T;
  orders?: T;
  invoices?: T;
  billingAddress?:
    | T
    | {
        street?: T;
        zipCode?: T;
        city?: T;
        country?: T;
      };
  shippingAddress?:
    | T
    | {
        sameAsBilling?: T;
        street?: T;
        zipCode?: T;
        city?: T;
        country?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  orderDate?: T;
  status?: T;
  orderType?: T;
  customer?: T;
  orderItems?:
    | T
    | {
        product?: T;
        quantity?: T;
        unitPrice?: T;
        discount?: T;
        id?: T;
      };
  shippingAddress?:
    | T
    | {
        street?: T;
        zipCode?: T;
        city?: T;
        country?: T;
      };
  billingAddress?:
    | T
    | {
        sameAsShipping?: T;
        street?: T;
        zipCode?: T;
        city?: T;
        country?: T;
      };
  shippingMethod?: T;
  paymentMethod?: T;
  subtotal?: T;
  taxAmount?: T;
  shippingCost?: T;
  discount?: T;
  total?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inventory_select".
 */
export interface InventorySelect<T extends boolean = true> {
  inventoryId?: T;
  product?: T;
  quantity?: T;
  availableQuantity?: T;
  reservedQuantity?: T;
  location?: T;
  warehouse?: T;
  section?: T;
  shelf?: T;
  bin?: T;
  minStockLevel?: T;
  reorderPoint?: T;
  reorderQuantity?: T;
  lastStockTake?: T;
  status?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "purchases_select".
 */
export interface PurchasesSelect<T extends boolean = true> {
  purchaseNumber?: T;
  orderDate?: T;
  expectedDeliveryDate?: T;
  actualDeliveryDate?: T;
  status?: T;
  supplier?: T;
  supplierInfo?:
    | T
    | {
        name?: T;
        contactPerson?: T;
        email?: T;
        phone?: T;
      };
  purchaseItems?:
    | T
    | {
        product?: T;
        quantity?: T;
        unitPrice?: T;
        discount?: T;
        id?: T;
      };
  paymentInfo?:
    | T
    | {
        paymentTerms?: T;
        paymentMethod?: T;
        paymentStatus?: T;
        dueDate?: T;
      };
  subtotal?: T;
  taxAmount?: T;
  shippingCost?: T;
  discount?: T;
  total?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invoices_select".
 */
export interface InvoicesSelect<T extends boolean = true> {
  invoiceNumber?: T;
  invoiceDate?: T;
  dueDate?: T;
  status?: T;
  order?: T;
  customer?: T;
  customerInfo?:
    | T
    | {
        customerNumber?: T;
        name?: T;
        email?: T;
        phone?: T;
        taxId?: T;
        vatId?: T;
      };
  billingAddress?:
    | T
    | {
        street?: T;
        zipCode?: T;
        city?: T;
        country?: T;
      };
  paymentTerms?: T;
  paymentMethod?: T;
  subtotal?: T;
  taxAmount?: T;
  shippingCost?: T;
  discount?: T;
  total?: T;
  notes?: T;
  issuedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payments_select".
 */
export interface PaymentsSelect<T extends boolean = true> {
  paymentNumber?: T;
  paymentDate?: T;
  invoice?: T;
  invoiceInfo?:
    | T
    | {
        invoiceNumber?: T;
        invoiceDate?: T;
      };
  amount?: T;
  paymentMethod?: T;
  status?: T;
  customer?: T;
  customerInfo?:
    | T
    | {
        customerNumber?: T;
        name?: T;
      };
  paymentReference?: T;
  transactionId?: T;
  notes?: T;
  processedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "warehouses_select".
 */
export interface WarehousesSelect<T extends boolean = true> {
  name?: T;
  code?: T;
  description?: T;
  isActive?: T;
  address?:
    | T
    | {
        street?: T;
        zipCode?: T;
        city?: T;
        country?: T;
      };
  contact?:
    | T
    | {
        name?: T;
        phone?: T;
        email?: T;
      };
  size?: T;
  capacity?: T;
  currentUsage?: T;
  sections?:
    | T
    | {
        name?: T;
        code?: T;
        description?: T;
        id?: T;
      };
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shippingMethods_select".
 */
export interface ShippingMethodsSelect<T extends boolean = true> {
  name?: T;
  carrier?: T;
  description?: T;
  price?: T;
  estimatedDeliveryDays?:
    | T
    | {
        min?: T;
        max?: T;
      };
  isActive?: T;
  isDefault?: T;
  trackingAvailable?: T;
  trackingUrlFormat?: T;
  restrictions?:
    | T
    | {
        minWeight?: T;
        maxWeight?: T;
        minOrderAmount?: T;
        countries?:
          | T
          | {
              country?: T;
              id?: T;
            };
      };
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "taxRates_select".
 */
export interface TaxRatesSelect<T extends boolean = true> {
  name?: T;
  rate?: T;
  description?: T;
  isActive?: T;
  region?: T;
  isDefault?: T;
  category?: T;
  effectiveFrom?: T;
  effectiveTo?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reports_select".
 */
export interface ReportsSelect<T extends boolean = true> {
  title?: T;
  reportType?: T;
  description?: T;
  parameters?: T;
  dateRange?:
    | T
    | {
        startDate?: T;
        endDate?: T;
      };
  results?: T;
  createdBy?: T;
  notes?: T;
  isScheduled?: T;
  schedule?:
    | T
    | {
        frequency?: T;
        nextRunDate?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents_select".
 */
export interface DocumentsSelect<T extends boolean = true> {
  title?: T;
  documentType?: T;
  description?: T;
  relatedEntity?: T;
  createdBy?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  isPublic?: T;
  expiryDate?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "integrations_select".
 */
export interface IntegrationsSelect<T extends boolean = true> {
  name?: T;
  integrationType?: T;
  description?: T;
  connectionDetails?:
    | T
    | {
        apiUrl?: T;
        authType?: T;
        credentials?: T;
      };
  status?: T;
  lastSyncAt?: T;
  syncFrequency?: T;
  nextSyncAt?: T;
  mappings?: T;
  errorLog?:
    | T
    | {
        timestamp?: T;
        errorMessage?: T;
        details?: T;
        id?: T;
      };
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auditLogs_select".
 */
export interface AuditLogsSelect<T extends boolean = true> {
  user?: T;
  action?: T;
  entityType?: T;
  entityId?: T;
  details?: T;
  changes?: T;
  ipAddress?: T;
  userAgent?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    global?: string | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}